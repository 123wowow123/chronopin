apiVersion: apps/v1
kind: Deployment
metadata:
  name: chronopin
  labels:
    app: chronopin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: website
      role: frontend
  template:
    metadata:
      labels:
        app: website
        role: frontend
    spec:
      containers:
      - name: chronopin
        # image: 123wowow123/chronopin:latest # Docker Hub Registry
        image: us-west1-docker.pkg.dev/chronopin-209507/chronopin-web/chronopin:latest # Google Cloud Registry
        imagePullPolicy: Always
        ports:
        - containerPort: 9000
          protocol: TCP
        # - containerPort: 80
        # - containerPort: 443
        # command: [ "/bin/sh", "-c", "echo $(SPECIAL_LEVEL_KEY) $(SPECIAL_TYPE_KEY)" ]
        # command: [ "/bin/sh", "-c", "env" ]
        envFrom: 
        - configMapRef:
            name: env-file 
      imagePullSecrets:
      - name: regcred
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: chronopin-lb
# spec:
#   type: LoadBalancer
#   ports:
#   # - port: 443
#   #   protocol: TCP
#   #   name: https
#   - port: 80
#     protocol: TCP
#     name: http
#     targetPort: 9000
#   selector:
#     app: website
#     role: frontend
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: chronopin-managed-cert
spec:
  domains:
    - chronopin.com
    - www.chronopin.com
---
apiVersion: v1
kind: Service
metadata:
  name: chronopin-np
spec:
  type: NodePort
  selector:
    app: website
    role: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chronopin-managed-cert-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: chronopin-ip
    networking.gke.io/managed-certificates: chronopin-managed-cert
    kubernetes.io/ingress.class: "gce"
spec:
  defaultBackend:
    service:
      name: chronopin-np
      port:
        number: 80